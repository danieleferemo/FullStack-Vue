{"remainingRequest":"C:\\Users\\daniel.eferemo\\Google Drive\\Code Readings\\Vue\\chapter-solutions\\chapter7c\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\daniel.eferemo\\Google Drive\\Code Readings\\Vue\\chapter-solutions\\chapter7c\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\daniel.eferemo\\Google Drive\\Code Readings\\Vue\\chapter-solutions\\chapter7c\\src\\app\\store\\modules\\cart\\index.js","dependencies":[{"path":"C:\\Users\\daniel.eferemo\\Google Drive\\Code Readings\\Vue\\chapter-solutions\\chapter7c\\src\\app\\store\\modules\\cart\\index.js","mtime":1558653202053},{"path":"C:\\Users\\daniel.eferemo\\Google Drive\\Code Readings\\Vue\\chapter-solutions\\chapter7c\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\daniel.eferemo\\Google Drive\\Code Readings\\Vue\\chapter-solutions\\chapter7c\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\daniel.eferemo\\Google Drive\\Code Readings\\Vue\\chapter-solutions\\chapter7c\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nvar state = {\n  cartItems: []\n};\nvar mutations = {\n  UPDATE_CART_ITEMS: function UPDATE_CART_ITEMS(state, payload) {\n    state.cartItems = payload;\n  }\n};\nvar actions = {\n  getCartItems: function getCartItems(_ref, token) {\n    var commit = _ref.commit;\n    axios.get(\"/api/cart?token=\".concat(token)).then(function (response) {\n      commit('UPDATE_CART_ITEMS', response.data);\n    });\n  },\n  addCartItem: function addCartItem(_ref2, cartItem) {\n    var commit = _ref2.commit;\n    return axios.post('/api/cart', cartItem).then(function (response) {\n      commit('UPDATE_CART_ITEMS', response.data);\n    });\n  },\n  removeCartItem: function removeCartItem(_ref3, cartItem) {\n    var commit = _ref3.commit;\n    axios.post('/api/cart/delete', cartItem).then(function (response) {\n      commit('UPDATE_CART_ITEMS', response.data);\n    });\n  },\n  removeAllCartItems: function removeAllCartItems(_ref4) {\n    var commit = _ref4.commit;\n    axios.post('/api/cart/delete/all').then(function (response) {\n      commit('UPDATE_CART_ITEMS', response.data);\n    });\n  }\n};\nvar getters = {\n  cartItems: function cartItems(state) {\n    return state.cartItems;\n  },\n  cartTotal: function cartTotal(state) {\n    return state.cartItems.reduce(function (acc, cartItem) {\n      return cartItem.quantity * cartItem.price + acc;\n    }, 0).toFixed(2);\n  },\n  cartQuantity: function cartQuantity(state) {\n    return state.cartItems.reduce(function (acc, cartItem) {\n      return cartItem.quantity + acc;\n    }, 0);\n  }\n};\nvar cartModule = {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};\nexport default cartModule;",{"version":3,"sources":["C:\\Users\\daniel.eferemo\\Google Drive\\Code Readings\\Vue\\chapter-solutions\\chapter7c\\src\\app\\store\\modules\\cart\\index.js"],"names":["axios","state","cartItems","mutations","UPDATE_CART_ITEMS","payload","actions","getCartItems","token","commit","get","then","response","data","addCartItem","cartItem","post","removeCartItem","removeAllCartItems","getters","cartTotal","reduce","acc","quantity","price","toFixed","cartQuantity","cartModule"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,SAAS,EAAE;AADC,CAAd;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,iBADgB,6BACGH,KADH,EACUI,OADV,EACmB;AACjCJ,IAAAA,KAAK,CAACC,SAAN,GAAkBG,OAAlB;AACD;AAHe,CAAlB;AAMA,IAAMC,OAAO,GAAG;AACdC,EAAAA,YADc,8BACYC,KADZ,EACmB;AAAA,QAAjBC,MAAiB,QAAjBA,MAAiB;AAC/BT,IAAAA,KAAK,CAACU,GAAN,2BAA6BF,KAA7B,GAAsCG,IAAtC,CAA2C,UAACC,QAAD,EAAc;AACvDH,MAAAA,MAAM,CAAC,mBAAD,EAAsBG,QAAQ,CAACC,IAA/B,CAAN;AACD,KAFD;AAGD,GALa;AAMdC,EAAAA,WANc,8BAMWC,QANX,EAMqB;AAAA,QAApBN,MAAoB,SAApBA,MAAoB;AACjC,WAAOT,KAAK,CAACgB,IAAN,CAAW,WAAX,EAAwBD,QAAxB,EAAkCJ,IAAlC,CAAuC,UAACC,QAAD,EAAc;AAC1DH,MAAAA,MAAM,CAAC,mBAAD,EAAsBG,QAAQ,CAACC,IAA/B,CAAN;AACD,KAFM,CAAP;AAGD,GAVa;AAWdI,EAAAA,cAXc,iCAWcF,QAXd,EAWwB;AAAA,QAApBN,MAAoB,SAApBA,MAAoB;AACpCT,IAAAA,KAAK,CAACgB,IAAN,CAAW,kBAAX,EAA+BD,QAA/B,EAAyCJ,IAAzC,CAA8C,UAACC,QAAD,EAAc;AAC1DH,MAAAA,MAAM,CAAC,mBAAD,EAAsBG,QAAQ,CAACC,IAA/B,CAAN;AACD,KAFD;AAGD,GAfa;AAgBdK,EAAAA,kBAhBc,qCAgBkB;AAAA,QAAVT,MAAU,SAAVA,MAAU;AAC9BT,IAAAA,KAAK,CAACgB,IAAN,CAAW,sBAAX,EAAmCL,IAAnC,CAAwC,UAACC,QAAD,EAAc;AACpDH,MAAAA,MAAM,CAAC,mBAAD,EAAsBG,QAAQ,CAACC,IAA/B,CAAN;AACD,KAFD;AAGD;AApBa,CAAhB;AAuBA,IAAMM,OAAO,GAAG;AACdjB,EAAAA,SAAS,EAAE,mBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAV;AAAA,GADF;AAEdkB,EAAAA,SAAS,EAAE,mBAAAnB,KAAK,EAAI;AAClB,WAAOA,KAAK,CAACC,SAAN,CAAgBmB,MAAhB,CAAuB,UAACC,GAAD,EAAMP,QAAN,EAAmB;AAC/C,aAAQA,QAAQ,CAACQ,QAAT,GAAoBR,QAAQ,CAACS,KAA9B,GAAuCF,GAA9C;AACD,KAFM,EAEJ,CAFI,EAEDG,OAFC,CAEO,CAFP,CAAP;AAGD,GANa;AAOdC,EAAAA,YAAY,EAAE,sBAAAzB,KAAK,EAAI;AACrB,WAAOA,KAAK,CAACC,SAAN,CAAgBmB,MAAhB,CAAuB,UAACC,GAAD,EAAMP,QAAN,EAAmB;AAC/C,aAAOA,QAAQ,CAACQ,QAAT,GAAoBD,GAA3B;AACD,KAFM,EAEJ,CAFI,CAAP;AAGD;AAXa,CAAhB;AAcA,IAAMK,UAAU,GAAG;AACjB1B,EAAAA,KAAK,EAALA,KADiB;AAEjBE,EAAAA,SAAS,EAATA,SAFiB;AAGjBG,EAAAA,OAAO,EAAPA,OAHiB;AAIjBa,EAAAA,OAAO,EAAPA;AAJiB,CAAnB;AAOA,eAAeQ,UAAf","sourcesContent":["import axios from 'axios';\n\nconst state = {\n  cartItems: []\n}\n\nconst mutations = {\n  UPDATE_CART_ITEMS (state, payload) {\n    state.cartItems = payload;\n  }\n}\n\nconst actions = {\n  getCartItems ({ commit }, token) {\n    axios.get(`/api/cart?token=${token}`).then((response) => {\n      commit('UPDATE_CART_ITEMS', response.data)\n    });\n  },\n  addCartItem ({ commit }, cartItem) {\n    return axios.post('/api/cart', cartItem).then((response) => {\n      commit('UPDATE_CART_ITEMS', response.data)\n    });\n  },\n  removeCartItem ({ commit }, cartItem) {\n    axios.post('/api/cart/delete', cartItem).then((response) => {\n      commit('UPDATE_CART_ITEMS', response.data)\n    });\n  },\n  removeAllCartItems ({ commit }) {\n    axios.post('/api/cart/delete/all').then((response) => {\n      commit('UPDATE_CART_ITEMS', response.data)\n    });\n  }\n}\n\nconst getters = {\n  cartItems: state => state.cartItems,\n  cartTotal: state => {\n    return state.cartItems.reduce((acc, cartItem) => {\n      return (cartItem.quantity * cartItem.price) + acc;\n    }, 0).toFixed(2);\n  },\n  cartQuantity: state => {\n    return state.cartItems.reduce((acc, cartItem) => {\n      return cartItem.quantity + acc;\n    }, 0);\n  }\n}\n\nconst cartModule = {\n  state,\n  mutations,\n  actions,\n  getters\n}\n\nexport default cartModule;\n"]}]}